@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService

<MudThemeProvider @bind-IsDarkMode="_isDarkTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">Grocy Scanner</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@(_isDarkTheme ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" OnClick="ToggleDarkTheme"></MudIconButton>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Icon="@Icons.Material.Filled.Home" Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.QrCodeScanner" Href="/scanner" Match="NavLinkMatch.All">Scanner</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.Settings" Href="/settings" Match="NavLinkMatch.All">Settings</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <div class="position-relative px-3 py-2 mx-auto h-100" style="max-width: 900px;">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    bool _isDarkTheme;

        private const string IsDarkModeKey = "theme.is-dark-mode";

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task ToggleDarkTheme()
    {
        _isDarkTheme = !_isDarkTheme;
        await LocalStorageService.SetItemAsync(IsDarkModeKey, _isDarkTheme);
    }

    protected override async Task OnInitializedAsync()
    {
        if (!await LocalStorageService.ContainKeyAsync(IsDarkModeKey))
        {
            return;
        }
        
        _isDarkTheme = await LocalStorageService.GetItemAsync<bool>(IsDarkModeKey);
    }

}